// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
/*
 * Copyright 2017-2022 NXP
 */
#include <dt-bindings/clock/s32g-clock.h>
#include <dt-bindings/clock/s32g-scmi-clock.h>
#include <dt-bindings/nvmem/s32cc-siul2-nvmem.h>
#include <dt-bindings/pinctrl/s32g-pinctrl.h>

#include "s32cc.dtsi"
/ {
	model = "NXP S32GXXX";

	signature {
		key-boot_key {
			required = "conf";
			algo = "sha1,rsa2048";
			key-name-hint = "boot_key";
		};
	};

	reserved-memory {
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;

		pfe_reserved: pfe_reserved@83400000 {
			no-map;
			reg = <0 0x83400000 0 0x8000>; /* 32K */
		};
	};

	soc {
		siul2_0: siul2_0@4009c000 {
			compatible = "simple-mfd";
			status = "okay";
			reg = <0x0 0x4009c000 0x0 0x2000>;
			u-boot,dm-pre-reloc;

			pinctrl0: siul2-pinctrl0 {
				compatible = "nxp,s32cc-siul2-pinctrl";
				#pinctrl-cells = <2>;
				/* MSCR range */
				pins = <&pinctrl0 0 101>,
				/* IMCR range */
				<&pinctrl0 512 595>;
				status = "okay";
			};

			gpio0: siul2-gpio0 {
				compatible = "nxp,s32cc-siul2-gpio";
				#gpio-cells = <2>;
				gpio-controller;
				gpio-ranges = <&pinctrl0 0 0 102>;
				status = "okay";
			};

			siul2_0_nvram: siul2_0_nvram {
				#address-cells = <1>;
				#size-cells = <1>;

				status = "okay";
				u-boot,dm-pre-reloc;

				soc_letter: soc_letter@0 {
					reg = <S32CC_SOC_LETTER S32CC_CELL_SIZE>;
					u-boot,dm-pre-reloc;
				};

				part_no: part_no@4 {
					reg = <S32CC_SOC_PART_NO S32CC_CELL_SIZE>;
					u-boot,dm-pre-reloc;
				};

				soc_major: soc_major@8 {
					reg = <S32CC_SOC_MAJOR S32CC_CELL_SIZE>;
					u-boot,dm-pre-reloc;
				};

				soc_minor: soc_minor@c {
					reg = <S32CC_SOC_MINOR S32CC_CELL_SIZE>;
					u-boot,dm-pre-reloc;
				};

				core_max_freq: core_max_freq@10 {
					reg = <S32CC_MAX_CORE_FREQ S32CC_CELL_SIZE>;
					u-boot,dm-pre-reloc;
				};

				max_cpus_per_cluster: max_cpus_per_cluster@14 {
					reg = <S32CC_MAX_A53_CORES_PER_CLUSTER
					    S32CC_CELL_SIZE>;
					u-boot,dm-pre-reloc;
				};

				a53_cores_mask: a53_cores_mask@18 {
					reg = <S32CC_A53_CORES_MASK S32CC_CELL_SIZE>;
					u-boot,dm-pre-reloc;
				};

				pcie_dev_id: pcie_dev_id@1c {
					reg = <S32CC_OVERWRITE_PCIE_DEV_ID
					    S32CC_CELL_SIZE>;
				};
			};
		};

		siul2_1@44010000 {
			compatible = "simple-mfd";
			status = "okay";
			reg = <0x0 0x44010000 0x0 0x2000>;
			u-boot,dm-pre-reloc;

			pinctrl1: siul2-pinctrl1 {
				compatible = "nxp,s32cc-siul2-pinctrl";
				#pinctrl-cells = <2>;
				/* MSCR range */
				pins = <&pinctrl1 112 190>,
				/* IMCR range */
				<&pinctrl1 631 1023>;
				status = "okay";
			};

			gpio1: siul2-gpio1 {
				compatible = "nxp,s32cc-siul2-gpio";
				#gpio-cells = <2>;
				gpio-controller;
				gpio-ranges = <&pinctrl1 0 112 11>,
					<&pinctrl1 11 144 47>;
				status = "okay";
			};

			siul2_1_nvram: siul2_1_nvram {
				#address-cells = <1>;
				#size-cells = <1>;

				status = "okay";
				u-boot,dm-pre-reloc;

				serdes_presence: serdes_presence@100 {
					reg = <S32CC_SERDES_PRESENCE S32CC_CELL_SIZE>;
				};

				soc_subminor: soc_subminor@108 {
					reg = <S32CC_SOC_SUBMINOR S32CC_CELL_SIZE>;
					u-boot,dm-pre-reloc;
				};
			};
		};

		mc_cgm2: mc_cgm2@44018000 {
			compatible = "nxp,s32cc-mc_cgm2";
			reg = <0x0 0x44018000 0x0 0x3000>;

			assigned-clocks =
				<&plat_clks S32G_CLK_MC_CGM2_MUX0>,
				<&plat_clks S32G_CLK_PFE_PE>;
			assigned-clock-rates =
				<0>,
				<600000000>;
			assigned-clock-parents =
				<&plat_clks S32G_CLK_ACCEL_PLL_PHI1>;
		};

		pfe: ethernet@46000000 {
			compatible = "fsl,s32g274a-pfe";
			reg = <0x0 0x46000000 0x0 0x1000000>;
			clocks = 
			//	<&clks S32G_SCMI_CLK_PFE_PE>,
			//	<&clks S32G_SCMI_CLK_PFE_AXI>,
			//	<&clks S32GEN1_SCMI_CLK_GMAC0_TS>,
				/* PFE0 */
				<&clks S32G_SCMI_CLK_PFE0_RX_SGMII>,
				<&clks S32G_SCMI_CLK_PFE0_TX_SGMII>;
			//	<&clks S32G_SCMI_CLK_PFE0_RX_RGMII>,
			//	<&clks S32G_SCMI_CLK_PFE0_TX_RGMII>,
				/* PFE1 */
			//	<&clks S32G_SCMI_CLK_PFE1_RX_SGMII>,
			//	<&clks S32G_SCMI_CLK_PFE1_TX_SGMII>,
			//	<&clks S32G_SCMI_CLK_PFE1_RX_RGMII>,
			//	<&clks S32G_SCMI_CLK_PFE1_TX_RGMII>,
				/* PFE2 */
			//	<&clks S32G_SCMI_CLK_PFE2_RX_SGMII>,
			//	<&clks S32G_SCMI_CLK_PFE2_TX_SGMII>,
			//	<&clks S32G_SCMI_CLK_PFE2_RX_RGMII>,
			//	<&clks S32G_SCMI_CLK_PFE2_TX_RGMII>;
			clock-names = 
			//	"pe", "axi", "ts",
				"mac0_rx_sgmii", "mac0_tx_sgmii";
			//	"mac0_rx_rgmii", "mac0_tx_rgmii",
			//	"mac1_rx_sgmii", "mac1_tx_sgmii",
			//	"mac1_rx_rgmii", "mac1_tx_rgmii",
			//	"mac2_rx_sgmii", "mac2_tx_sgmii",
			//	"mac2_rx_rgmii", "mac2_tx_rgmii";
			//pinctrl-0 = 
			//	<&pinctrl0_pfe0 &pinctrl0_pfe0_mdio &pinctrl1_pfe0 &pinctrl1_pfe0_mdio>;
			pinctrl-1 = 
				<&pinctrl0_pfe0_mdio &pinctrl1_pfe0_mdio>;
			//pinctrl-2 = 
			//	<&pinctrl0_pfe1 &pinctrl0_pfe1_mdio &pinctrl1_pfe1 &pinctrl1_pfe1_mdio>;
			//pinctrl-3 = 
			//	<&pinctrl0_pfe1_mdio &pinctrl1_pfe1_mdio>;
			//pinctrl-4 = 
			//	<&pinctrl0_pfe2 &pinctrl0_pfe2_mdio &pinctrl1_pfe2 &pinctrl1_pfe2_mdio>;
			//pinctrl-5 = 
			//	<&pinctrl0_pfe2_mdio &pinctrl1_pfe2_mdio>;
			pinctrl-names = 
			//	"pfe0_rgmii", 
				"pfe0_sgmii";
			//	"pfe1_rgmii", 
			//	"pfe1_sgmii",
			//	"pfe2_rgmii", 
			//	"pfe2_sgmii";
			status = "okay";
			memory-region = <&pfe_reserved>;
		};
	};
};

&plat_clks {
	clocks = <&plat_clks S32GEN1_CLK_PER>,
		<&plat_clks S32GEN1_CLK_FTM0_REF>,
		<&plat_clks S32GEN1_CLK_FTM1_REF>,
		<&plat_clks S32GEN1_CLK_CAN_PE>,
		<&plat_clks S32GEN1_CLK_XBAR_2X>,
		<&plat_clks S32GEN1_CLK_XBAR>,
		<&plat_clks S32GEN1_CLK_XBAR_DIV2>,
		<&plat_clks S32GEN1_CLK_XBAR_DIV3>,
		<&plat_clks S32GEN1_CLK_XBAR_DIV4>,
		<&plat_clks S32GEN1_CLK_XBAR_DIV6>,
		<&plat_clks S32GEN1_CLK_SPI>,
		<&plat_clks S32GEN1_CLK_QSPI>;

	assigned-clocks =
		<&plat_clks S32GEN1_CLK_FXOSC>,
		<&plat_clks S32GEN1_CLK_FIRC>,
		<&plat_clks S32GEN1_CLK_SIRC>,
		<&plat_clks S32GEN1_CLK_GMAC0_EXT_RX>,
		<&plat_clks S32G_CLK_SERDES1_LANE0_TX>,
		<&plat_clks S32G_CLK_SERDES1_LANE0_CDR>,
		<&plat_clks S32G_CLK_SERDES1_LANE1_TX>,
		<&plat_clks S32G_CLK_SERDES1_LANE1_CDR>,
		<&plat_clks S32GEN1_CLK_SERDES0_LANE0_TX>,
		<&plat_clks S32GEN1_CLK_SERDES0_LANE0_CDR>,
		<&plat_clks S32G_CLK_SERDES0_LANE1_TX>,
		<&plat_clks S32G_CLK_SERDES0_LANE1_CDR>,
		<&plat_clks S32GEN1_CLK_SERDES_REF>;
	assigned-clock-parents =
		<&fxosc 0>,
		<&firc 0>,
		<&sirc 0>,
		<&gmac0_ext_rx 0>,
		<&serdes1_lane0_ext_tx 0>,
		<&serdes1_lane0_ext_cdr 0>,
		<&serdes1_lane1_ext_tx 0>,
		<&serdes1_lane1_ext_cdr 0>,
		<&serdes0_lane0_ext_tx 0>,
		<&serdes0_lane0_ext_cdr 0>,
		<&serdes0_lane1_ext_tx 0>,
		<&serdes0_lane1_ext_cdr 0>;
	assigned-clock-rates =
		<0>, <0>, <0>, <0>,
		<0>, <0>, <0>, <0>,
		<0>, <0>, <0>, <0>,
		<100000000>;
};

&accelpll {
	assigned-clocks =
		<&plat_clks S32GEN1_CLK_ACCEL_PLL_MUX>,
		<&plat_clks S32GEN1_CLK_ACCEL_PLL_VCO>,
		<&plat_clks S32G_CLK_ACCEL_PLL_PHI0>,
		<&plat_clks S32G_CLK_ACCEL_PLL_PHI1>;
	assigned-clock-parents =
		<&plat_clks S32GEN1_CLK_FXOSC>;
	assigned-clock-rates =
		<0>,
		<1800000000>,
		<600000000>,
		<600000000>;
};

&gmac0 {
	clocks = <&clks S32GEN1_SCMI_CLK_GMAC0_TS>,
		 <&clks S32GEN1_SCMI_CLK_GMAC0_RX_SGMII>,
		 <&clks S32GEN1_SCMI_CLK_GMAC0_TX_SGMII>,
		 <&clks S32GEN1_SCMI_CLK_GMAC0_RX_RGMII>,
		 <&clks S32GEN1_SCMI_CLK_GMAC0_TX_RGMII>,
		 <&clks S32GEN1_SCMI_CLK_GMAC0_AXI>;
	clock-names = "ts", "rx_sgmii", "tx_sgmii",
		      "rx_rgmii", "tx_rgmii", "axi";
	pinctrl-0 = <&pinctrl0_gmac0 &pinctrl0_gmac0_mdio>;
	pinctrl-1 = <&pinctrl0_gmac0_mdio>;
	pinctrl-names = "gmac_rgmii", "gmac_sgmii";
};

&qspi {
	compatible = "nxp,s32g-qspi", "nxp,s32cc-qspi";
	status = "okay";

	mx25uw51245g@0 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "jedec,spi-nor";
		spi-max-frequency = <200000000>;
		spi-tx-bus-width = <8>;
		spi-rx-bus-width = <8>;
		reg = <0>;
	};
};

&usdhc0 {
	status = "okay";
};

&pcie0 {
	status = "okay";

	link-speed = <3>; /* Gen3 */
};

&pcie1 {
	status = "okay";

	link-speed = <2>; /* Gen2 */
};

&serdes0 {
	status = "okay";
};

&pinctrl0 {
	board_generic_pinctrl0 {
		u-boot,dm-pre-reloc;
		pinctrl0_sd0: pinctrl0_sd0 {
			fsl,pins = <PC14_MSCR_S32G PC14_SD0_CLK_CFG
				    PC15_MSCR_S32G PC15_SD0_CMD_CFG
				    PD00_MSCR_S32G PD00_SD0_D0_CFG
				    PD01_MSCR_S32G PD01_SD0_D1_CFG
				    PD02_MSCR_S32G PD02_SD0_D2_CFG
				    PD03_MSCR_S32G PD03_SD0_D3_CFG
				    PD04_MSCR_S32G PD04_SD0_D4_CFG
				    PD05_MSCR_S32G PD05_SD0_D5_CFG
				    PD06_MSCR_S32G PD06_SD0_D6_CFG
				    PD07_MSCR_S32G PD07_SD0_D7_CFG
				    PD08_MSCR_S32G PD08_SD0_RST_CFG
				    PD09_MSCR_S32G PD09_SD0_VSELECT_CFG
				    PD10_MSCR_S32G PD10_SD0_DQS_CFG
				    SD0_CMD_IMCR PC15_SD0_CMD_IN
				    SD0_D0_IMCR PD00_SD0_D0_IN
				    SD0_D1_IMCR PD01_SD0_D1_IN
				    SD0_D2_IMCR PD02_SD0_D2_IN
				    SD0_D3_IMCR PD03_SD0_D3_IN
				    SD0_D4_IMCR PD04_SD0_D4_IN
				    SD0_D5_IMCR PD05_SD0_D5_IN
				    SD0_D6_IMCR PD06_SD0_D6_IN
				    SD0_D7_IMCR PD07_SD0_D7_IN
				    SD0_DQS_IMCR PD10_SD0_DQS_IN
				    >;
		};

		pinctrl0_gmac0_mdio: pinctrl0_gmac0_mdio {
			fsl,pins = <PD12_MSCR_S32G PD12_GMAC0_MDC_CFG
				    PD13_MSCR_S32G PD13_GMAC0_MDIO_CFG
				    GMAC0_MDIO_IMCR PD13_GMAC0_MDIO_IN
				    >;
		};

		pinctrl0_gmac0: pinctrl0_gmac0 {
			fsl,pins = <PE02_MSCR_S32G PE02_GMAC0_TX_CLK_CFG
				    PE03_MSCR_S32G PE03_GMAC0_TX_EN_CFG
				    PE04_MSCR_S32G PE04_GMAC0_TX_D0_CFG
				    PE05_MSCR_S32G PE05_GMAC0_TX_D1_CFG
				    PE06_MSCR_S32G PE06_GMAC0_TX_D2_CFG
				    PE07_MSCR_S32G PE07_GMAC0_TX_D3_CFG
				    PE08_MSCR_S32G PE08_GMAC0_RX_CLK_CFG
				    PE09_MSCR_S32G PE09_GMAC0_RX_DV_CFG
				    PE10_MSCR_S32G PE10_GMAC0_RX_D0_CFG
				    PE11_MSCR_S32G PE11_GMAC0_RX_D1_CFG
				    PE12_MSCR_S32G PE12_GMAC0_RX_D2_CFG
				    PE13_MSCR_S32G PE13_GMAC0_RX_D3_CFG
				    GMAC0_TX_CLK_IMCR PE02_GMAC0_TX_CLK_IN
				    GMAC0_RX_CLK_IMCR PE08_GMAC0_RX_CLK_IN
				    GMAC0_RX_DV_IMCR PE09_GMAC0_RX_DV_IN
				    GMAC0_RX_D0_IMCR PE10_GMAC0_RX_D0_IN
				    GMAC0_RX_D1_IMCR PE11_GMAC0_RX_D1_IN
				    GMAC0_RX_D2_IMCR PE12_GMAC0_RX_D2_IN
				    GMAC0_RX_D3_IMCR PE13_GMAC0_RX_D3_IN
				    >;
		};

		pinctrl0_pfe0_mdio: pinctrl0_pfe0_mdio {
			fsl,pins = <PE15_MSCR_S32G PE15_PFE0_MDIO_CFG
				    PF02_MSCR_S32G PF02_PFE0_MDC_CFG
				    >;
		};

		pinctrl0_pfe0: pinctrl0_pfe0 {
			fsl,pins = <PE14_MSCR_S32G PE14_PFE0_TX_EN_CFG>;
		};

		pinctrl0_pfe1_mdio: pinctrl0_pfe1_mdio {
			fsl,pins = <PD12_MSCR_S32G PD12_PFE1_MDC_CFG
				    PD13_MSCR_S32G PD13_PFE1_MDIO_CFG
				    >;
		};

		pinctrl0_pfe1: pinctrl0_pfe1 {
			fsl,pins = <PE02_MSCR_S32G PE02_PFE1_TX_CLK_CFG
				    PE03_MSCR_S32G PE03_PFE1_TX_EN_CFG
				    PE04_MSCR_S32G PE04_PFE1_TX_D0_CFG
				    PE05_MSCR_S32G PE05_PFE1_TX_D1_CFG
				    PE06_MSCR_S32G PE06_PFE1_TX_D2_CFG
				    PE07_MSCR_S32G PE07_PFE1_TX_D3_CFG
				    PE08_MSCR_S32G PE08_PFE1_RX_CLK_CFG
				    PE09_MSCR_S32G PE09_PFE1_RX_DV_CFG
				    PE10_MSCR_S32G PE10_PFE1_RX_D0_CFG
				    PE11_MSCR_S32G PE11_PFE1_RX_D1_CFG
				    PE12_MSCR_S32G PE12_PFE1_RX_D2_CFG
				    PE13_MSCR_S32G PE13_PFE1_RX_D3_CFG
				    >;
		};

		pinctrl0_pfe2_mdio: pinctrl0_pfe2_mdio {
			fsl,pins = <PE15_MSCR_S32G PE15_PFE2_MDIO_CFG
				    PF02_MSCR_S32G PF02_PFE2_MDC_CFG
				    >;
		};

		pinctrl0_pfe2: pinctrl0_pfe2 {
			fsl,pins = <PE14_MSCR_S32G PE14_PFE2_TX_EN_CFG>;
		};
	};
};

&pinctrl1 {
	board_generic_pinctrl1 {
		pinctrl1_pfe0_mdio: pinctrl1_pfe0_mdio {
			fsl,pins = <PFE0_MDIO_IMCR PE15_PFE0_MDIO_IN>;
		};

		pinctrl1_pfe0: pinctrl1_pfe0 {
			fsl,pins = <PH01_MSCR_S32G PH01_PFE0_TX_D1_CFG
				    PH02_MSCR_S32G PH02_PFE0_TX_D2_CFG
				    PH03_MSCR_S32G PH03_PFE0_TX_D3_CFG
				    PH04_MSCR_S32G PH04_PFE0_RX_CLK_CFG
				    PH05_MSCR_S32G PH05_PFE0_RX_DV_CFG
				    PH06_MSCR_S32G PH06_PFE0_RX_D0_CFG
				    PH07_MSCR_S32G PH07_PFE0_RX_D1_CFG
				    PH08_MSCR_S32G PH08_PFE0_RX_D2_CFG
				    PH09_MSCR_S32G PH09_PFE0_RX_D3_CFG
				    PH10_MSCR_S32G PH10_PFE0_TX_CLK_CFG
				    PJ00_MSCR_S32G PJ00_PFE0_TX_D0_CFG
				    PFE0_RX_CLK_IMCR PH04_PFE0_RX_CLK_IN
				    PFE0_RX_DV_IMCR PH05_PFE0_RX_DV_IN
				    PFE0_RX_D0_IMCR PH06_PFE0_RX_D0_IN
				    PFE0_RX_D1_IMCR PH07_PFE0_RX_D1_IN
				    PFE0_RX_D2_IMCR PH08_PFE0_RX_D2_IN
				    PFE0_RX_D3_IMCR PH09_PFE0_RX_D3_IN
				    >;
		};

		pinctrl1_pfe1_mdio: pinctrl1_pfe1_mdio {
			fsl,pins = <PFE1_MDIO_IMCR PD13_PFE1_MDIO_IN>;
		};

		pinctrl1_pfe1: pinctrl1_pfe1 {
			fsl,pins = <PFE1_RX_CLK_IMCR PE08_PFE1_RX_CLK_IN
				    PFE1_RX_DV_IMCR PE09_PFE1_RX_DV_IN
				    PFE1_RX_D0_IMCR PE10_PFE1_RX_D0_IN
				    PFE1_RX_D1_IMCR PE11_PFE1_RX_D1_IN
				    PFE1_RX_D2_IMCR PE12_PFE1_RX_D2_IN
				    PFE1_RX_D3_IMCR PE13_PFE1_RX_D3_IN
				    >;
		};

		pinctrl1_pfe2_mdio: pinctrl1_pfe2_mdio {
			fsl,pins = <PFE2_MDIO_IMCR PE15_PFE2_MDIO_IN
				    >;
		};

		pinctrl1_pfe2: pinctrl1_pfe2 {
			fsl,pins = <PH01_MSCR_S32G PH01_PFE2_TX_D1_CFG
				    PH02_MSCR_S32G PH02_PFE2_TX_D2_CFG
				    PH03_MSCR_S32G PH03_PFE2_TX_D3_CFG
				    PH04_MSCR_S32G PH04_PFE2_RX_CLK_CFG
				    PH05_MSCR_S32G PH05_PFE2_RX_DV_CFG
				    PH06_MSCR_S32G PH06_PFE2_RX_D0_CFG
				    PH07_MSCR_S32G PH07_PFE2_RX_D1_CFG
				    PH08_MSCR_S32G PH08_PFE2_RX_D2_CFG
				    PH09_MSCR_S32G PH09_PFE2_RX_D3_CFG
				    PH10_MSCR_S32G PH10_PFE2_TX_CLK_CFG
				    PJ00_MSCR_S32G PJ00_PFE2_TX_D0_CFG
				    PFE2_RX_CLK_IMCR PH04_PFE2_RX_CLK_IN
				    PFE2_RX_DV_IMCR PH05_PFE2_RX_DV_IN
				    PFE2_RX_D0_IMCR PH06_PFE2_RX_D0_IN
				    PFE2_RX_D1_IMCR PH07_PFE2_RX_D1_IN
				    PFE2_RX_D2_IMCR PH08_PFE2_RX_D2_IN
				    PFE2_RX_D3_IMCR PH09_PFE2_RX_D3_IN
				    >;
		};
	};
};

&ocotp {
	compatible = "nxp,s32g-ocotp";
};

&serdes1 {
	num-lanes = <2>;
};
